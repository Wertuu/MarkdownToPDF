name: Convert Markdown to PDF

on:
  push:
    paths:
      - '**/*.md'  # Only run when .md files are changed
  pull_request:
    paths:
      - '**/*.md'  # Also run on pull requests when .md files are changed

jobs:
  build:
    runs-on: ubuntu-latest  # The environment the workflow runs in

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4  # Use the latest version of actions/checkout

    - name: Cache texlive and pandoc
      uses: actions/cache@v4
      with:
        path: |
          $HOME/.local/bin/pandoc
          $HOME/.texlive
        key: texlive-pandoc-${{ runner.os }}-${{ hashFiles('**/*.md') }}
        restore-keys: |
          texlive-pandoc-${{ runner.os }}-

    - name: Install required packages (if not cached)
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        sudo apt-get update && \
        sudo apt-get install pandoc texlive-xetex -y && \
        mkdir -p $HOME/.local/bin && \
        mkdir -p $HOME/.texlive && \
        sudo cp /usr/bin/pandoc $HOME/.local/bin/pandoc && \
        sudo cp -r /usr/share/texlive/* $HOME/.texlive  # Install and copy files to user directories

    - name: List Files (Debugging Step)
      run: ls -R $HOME/.local/bin && ls -R $HOME/.texlive  # List files in the cached paths

    - name: Convert Markdown files to PDF
      run: |
        mkdir -p output_pdf  # Create output directory for PDFs
        for file in *.md; do
          echo "Converting $file to PDF using xelatex"  # Log the file being processed
          $HOME/.local/bin/pandoc "$file" -o "output_pdf/${file%.md}.pdf" --pdf-engine=xelatex  # Convert .md to .pdf
        done

    - name: Upload PDF Files
      uses: actions/upload-artifact@v4  # Upload the generated PDFs as artifacts
      with:
        name: PDFs
        path: output_pdf  # Upload the generated PDFs as artifacts
